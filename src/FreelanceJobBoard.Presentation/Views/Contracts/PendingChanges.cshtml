@model FreelanceJobBoard.Application.Features.Contracts.Queries.GetPendingChangeRequests.GetPendingChangeRequestsResult
@{
    ViewData["Title"] = "Pending Contract Changes";
    Layout = "~/Views/Shared/_DashboardLayout.cshtml";
}

<div class="d-flex flex-column flex-column-fluid">
    <!--begin::Toolbar-->
    <div id="kt_app_toolbar" class="app-toolbar py-3 py-lg-6">
        <div id="kt_app_toolbar_container" class="app-container container-xxl d-flex flex-stack">
            <div class="page-title d-flex flex-column justify-content-center flex-wrap me-3">
                <h1 class="page-heading d-flex text-dark fw-bold fs-3 flex-column justify-content-center my-0">Pending Contract Changes</h1>
                <ul class="breadcrumb breadcrumb-separatorless fw-semibold fs-7 my-0 pt-1">
                    <li class="breadcrumb-item text-muted">
                        <a asp-controller="Home" asp-action="Index" class="text-muted text-hover-primary">Home</a>
                    </li>
                    <li class="breadcrumb-item">
                        <span class="bullet bg-gray-400 w-5px h-2px"></span>
                    </li>
                    <li class="breadcrumb-item text-muted">
                        <a asp-action="Index" class="text-muted text-hover-primary">Contracts</a>
                    </li>
                    <li class="breadcrumb-item">
                        <span class="bullet bg-gray-400 w-5px h-2px"></span>
                    </li>
                    <li class="breadcrumb-item text-muted">Pending Changes</li>
                </ul>
            </div>
            <div class="d-flex align-items-center gap-2 gap-lg-3">
                <a asp-action="Index" class="btn btn-sm fw-bold btn-secondary">
                    <i class="ki-duotone ki-arrow-left fs-4"></i>
                    Back to Contracts
                </a>
            </div>
        </div>
    </div>
    <!--end::Toolbar-->

    <!--begin::Content-->
    <div id="kt_app_content" class="app-content flex-column-fluid">
        <div id="kt_app_content_container" class="app-container container-xxl">
            
            @if (TempData["Success"] != null)
            {
                <div class="alert alert-success alert-dismissible fade show" role="alert">
                    <i class="ki-duotone ki-check-circle fs-2 me-3">
                        <span class="path1"></span>
                        <span class="path2"></span>
                    </i>
                    @TempData["Success"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
            }

            @if (TempData["Error"] != null)
            {
                <div class="alert alert-danger alert-dismissible fade show" role="alert">
                    <i class="ki-duotone ki-cross-circle fs-2 me-3">
                        <span class="path1"></span>
                        <span class="path2"></span>
                    </i>
                    @TempData["Error"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
            }

            <div class="card">
                <div class="card-header border-0 pt-6">
                    <div class="card-title">
                        <div class="d-flex align-items-center position-relative my-1">
                            <i class="ki-duotone ki-magnifier fs-3 position-absolute ms-5">
                                <span class="path1"></span>
                                <span class="path2"></span>
                            </i>
                            <input type="text" data-kt-pending-changes-filter="search" class="form-control form-control-solid w-250px ps-13" placeholder="Search change requests" />
                        </div>
                    </div>
                    <div class="card-toolbar">
                        <div class="d-flex justify-content-end">
                            <button type="button" class="btn btn-light-primary me-3" data-kt-menu-trigger="click" data-kt-menu-placement="bottom-end">
                                <i class="ki-duotone ki-filter fs-2">
                                    <span class="path1"></span>
                                    <span class="path2"></span>
                                </i>
                                Filter
                            </button>
                            <div class="menu menu-sub menu-sub-dropdown w-300px w-md-325px" data-kt-menu="true">
                                <div class="px-7 py-5">
                                    <div class="fs-5 text-dark fw-bold">Filter Options</div>
                                </div>
                                <div class="separator border-gray-200"></div>
                                <div class="px-7 py-5">
                                    <div class="mb-10">
                                        <label class="form-label fs-6 fw-semibold">Requires Response:</label>
                                        <select class="form-select form-select-solid fw-bold" data-kt-select2="true" data-placeholder="Select option" data-allow-clear="true" data-hide-search="true">
                                            <option></option>
                                            <option value="yes">Yes</option>
                                            <option value="no">No</option>
                                        </select>
                                    </div>
                                    <div class="d-flex justify-content-end">
                                        <button type="reset" class="btn btn-light btn-active-light-primary fw-semibold me-2 px-6" data-kt-menu-dismiss="true">Reset</button>
                                        <button type="submit" class="btn btn-primary fw-semibold px-6" data-kt-menu-dismiss="true">Apply</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="card-body py-4">
                    @if (Model.PendingRequests?.Any() == true)
                    {
                        @foreach (var request in Model.PendingRequests)
                        {
                            <div class="card border @(request.RequiresUserResponse ? "border-warning" : "border-gray-300") mb-5" data-change-request="@request.Id">
                                <div class="card-header border-0 pt-6">
                                    <div class="card-title">
                                        <div class="d-flex align-items-center">
                                            <div class="symbol symbol-50px me-5">
                                                <div class="symbol-label bg-light-@(request.RequiresUserResponse ? "warning" : "primary")">
                                                    <i class="ki-duotone ki-abstract-28 text-@(request.RequiresUserResponse ? "warning" : "primary") fs-2x">
                                                        <span class="path1"></span>
                                                        <span class="path2"></span>
                                                    </i>
                                                </div>
                                            </div>
                                            <div class="flex-grow-1">
                                                <a asp-action="Details" asp-route-id="@request.ContractJobTitle" class="text-gray-800 text-hover-primary fs-5 fw-bold">@request.ContractJobTitle</a>
                                                <div class="text-muted fs-7">
                                                    Change requested by @request.RequestedByRole on @request.RequestDate.ToString("MMM dd, yyyy 'at' h:mm tt")
                                                </div>
                                            </div>
                                            @if (request.RequiresUserResponse)
                                            {
                                                <span class="badge badge-light-warning">Action Required</span>
                                            }
                                            else
                                            {
                                                <span class="badge badge-light-primary">Waiting for Response</span>
                                            }
                                        </div>
                                    </div>
                                    <div class="card-toolbar">
                                        @if (request.ExpiryDate.HasValue)
                                        {
                                            <div class="text-muted fs-7 me-3">
                                                <i class="ki-duotone ki-time fs-7 me-1">
                                                    <span class="path1"></span>
                                                    <span class="path2"></span>
                                                </i>
                                                Expires: @request.ExpiryDate.Value.ToString("MMM dd, yyyy")
                                            </div>
                                        }
                                    </div>
                                </div>
                                <div class="card-body pt-0">
                                    <div class="row">
                                        <div class="col-xl-8">
                                            <div class="mb-5">
                                                <div class="fw-bold text-gray-600 mb-2">Change Description:</div>
                                                <div class="text-gray-800">@request.ChangeDescription</div>
                                            </div>
                                            
                                            <div class="row">
                                                <div class="col-6">
                                                    <div class="mb-3">
                                                        <div class="fw-bold text-gray-600 mb-1">Current Payment:</div>
                                                        <div class="text-gray-800">$@request.FromVersion.PaymentAmount.ToString("N2")</div>
                                                    </div>
                                                </div>
                                                <div class="col-6">
                                                    <div class="mb-3">
                                                        <div class="fw-bold text-gray-600 mb-1">Proposed Payment:</div>
                                                        <div class="text-gray-800 @(request.FromVersion.PaymentAmount != request.ProposedVersion.PaymentAmount ? "text-primary fw-bold" : "")">
                                                            $@request.ProposedVersion.PaymentAmount.ToString("N2")
                                                            @if (request.FromVersion.PaymentAmount != request.ProposedVersion.PaymentAmount)
                                                            {
                                                                var difference = request.ProposedVersion.PaymentAmount - request.FromVersion.PaymentAmount;
                                                                <span class="badge badge-light-@(difference > 0 ? "success" : "danger") ms-2">
                                                                    @(difference > 0 ? "+" : "")@difference.ToString("N2")
                                                                </span>
                                                            }
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>

                                            <div class="mb-3">
                                                <div class="fw-bold text-gray-600 mb-1">Contract Parties:</div>
                                                <div class="text-gray-800">
                                                    <span class="me-3">
                                                        <i class="ki-duotone ki-briefcase fs-7 me-1">
                                                            <span class="path1"></span>
                                                            <span class="path2"></span>
                                                        </i>
                                                        @request.ClientName (Client)
                                                    </span>
                                                    <span>
                                                        <i class="ki-duotone ki-profile-user fs-7 me-1">
                                                            <span class="path1"></span>
                                                            <span class="path2"></span>
                                                            <span class="path3"></span>
                                                            <span class="path4"></span>
                                                        </i>
                                                        @request.FreelancerName (Freelancer)
                                                    </span>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-xl-4">
                                            @if (request.RequiresUserResponse)
                                            {
                                                <div class="d-flex flex-column gap-3">
                                                    <button type="button" class="btn btn-success" data-bs-toggle="modal" data-bs-target="#responseModal" 
                                                            data-request-id="@request.Id" data-action="approve" data-job-title="@request.ContractJobTitle">
                                                        <i class="ki-duotone ki-check fs-2">
                                                            <span class="path1"></span>
                                                            <span class="path2"></span>
                                                        </i>
                                                        Approve Changes
                                                    </button>
                                                    <button type="button" class="btn btn-danger" data-bs-toggle="modal" data-bs-target="#responseModal" 
                                                            data-request-id="@request.Id" data-action="reject" data-job-title="@request.ContractJobTitle">
                                                        <i class="ki-duotone ki-cross fs-2">
                                                            <span class="path1"></span>
                                                            <span class="path2"></span>
                                                        </i>
                                                        Reject Changes
                                                    </button>
                                                    <button type="button" class="btn btn-light-primary" data-bs-toggle="modal" data-bs-target="#detailsModal" 
                                                            data-request="@System.Text.Json.JsonSerializer.Serialize(request)">
                                                        <i class="ki-duotone ki-eye fs-2">
                                                            <span class="path1"></span>
                                                            <span class="path2"></span>
                                                            <span class="path3"></span>
                                                        </i>
                                                        View Details
                                                    </button>
                                                </div>
                                            }
                                            else
                                            {
                                                <div class="d-flex flex-column gap-3">
                                                    <div class="alert alert-info">
                                                        <i class="ki-duotone ki-information-5 fs-2 me-2">
                                                            <span class="path1"></span>
                                                            <span class="path2"></span>
                                                            <span class="path3"></span>
                                                        </i>
                                                        Waiting for response from the other party
                                                    </div>
                                                    <button type="button" class="btn btn-light-primary" data-bs-toggle="modal" data-bs-target="#detailsModal" 
                                                            data-request="@System.Text.Json.JsonSerializer.Serialize(request)">
                                                        <i class="ki-duotone ki-eye fs-2">
                                                            <span class="path1"></span>
                                                            <span class="path2"></span>
                                                            <span class="path3"></span>
                                                        </i>
                                                        View Details
                                                    </button>
                                                </div>
                                            }
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    }
                    else
                    {
                        <div class="text-center py-10">
                            <i class="ki-duotone ki-questionnaire-tablet fs-5x text-gray-300 mb-5">
                                <span class="path1"></span>
                                <span class="path2"></span>
                            </i>
                            <h3 class="text-gray-600 fw-semibold mb-4">No Pending Changes</h3>
                            <p class="text-gray-400">You don't have any pending contract change requests at the moment.</p>
                            <div class="mt-6">
                                <a asp-action="Index" class="btn btn-primary">
                                    <i class="ki-duotone ki-handshake fs-2"></i>
                                    View My Contracts
                                </a>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Response Modal -->
<div class="modal fade" id="responseModal" tabindex="-1" aria-labelledby="responseModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form id="responseForm" asp-action="RespondToChange" method="post">
                <div class="modal-header">
                    <h5 class="modal-title" id="responseModalLabel">Respond to Change Request</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <input type="hidden" name="changeRequestId" id="changeRequestId" />
                    <input type="hidden" name="isApproved" id="isApproved" />
                    
                    <div class="alert alert-info" id="responseAlert">
                        <!-- Content will be populated by JavaScript -->
                    </div>
                    
                    <div class="mb-3">
                        <label for="responseNotes" class="form-label">Response Notes (Optional)</label>
                        <textarea name="responseNotes" id="responseNotes" class="form-control" rows="3" 
                                  placeholder="Add any comments or feedback about your decision..."></textarea>
                    </div>
                </div>
                <div class="modal-footer">
                    @Html.AntiForgeryToken()
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn" id="responseSubmitBtn">
                        <!-- Button text and class will be set by JavaScript -->
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Details Modal -->
<div class="modal fade" id="detailsModal" tabindex="-1" aria-labelledby="detailsModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-xl">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="detailsModalLabel">Change Request Details</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="detailsModalBody">
                <!-- Content will be populated by JavaScript -->
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Handle response modal
            document.querySelectorAll('[data-bs-target="#responseModal"]').forEach(button => {
                button.addEventListener('click', function() {
                    const requestId = this.getAttribute('data-request-id');
                    const action = this.getAttribute('data-action');
                    const jobTitle = this.getAttribute('data-job-title');
                    const isApprove = action === 'approve';
                    
                    document.getElementById('changeRequestId').value = requestId;
                    document.getElementById('isApproved').value = isApprove;
                    
                    const alert = document.getElementById('responseAlert');
                    const submitBtn = document.getElementById('responseSubmitBtn');
                    
                    if (isApprove) {
                        alert.className = 'alert alert-success';
                        alert.innerHTML = `<i class="ki-duotone ki-check-circle fs-2 me-2"><span class="path1"></span><span class="path2"></span></i>You are about to <strong>approve</strong> the contract changes for "${jobTitle}". The contract will be updated with the proposed changes.`;
                        submitBtn.className = 'btn btn-success';
                        submitBtn.innerHTML = '<i class="ki-duotone ki-check fs-2"></i> Approve Changes';
                    } else {
                        alert.className = 'alert alert-danger';
                        alert.innerHTML = `<i class="ki-duotone ki-cross-circle fs-2 me-2"><span class="path1"></span><span class="path2"></span></i>You are about to <strong>reject</strong> the contract changes for "${jobTitle}". The current contract terms will remain unchanged.`;
                        submitBtn.className = 'btn btn-danger';
                        submitBtn.innerHTML = '<i class="ki-duotone ki-cross fs-2"></i> Reject Changes';
                    }
                });
            });

            // Handle details modal
            document.querySelectorAll('[data-bs-target="#detailsModal"]').forEach(button => {
                button.addEventListener('click', function() {
                    const requestData = JSON.parse(this.getAttribute('data-request'));
                    const modalBody = document.getElementById('detailsModalBody');
                    
                    modalBody.innerHTML = `
                        <div class="row">
                            <div class="col-6">
                                <h6 class="fw-bold mb-3">Current Version</h6>
                                <div class="card border border-secondary mb-5">
                                    <div class="card-body">
                                        <div class="mb-3"><strong>Title:</strong> ${requestData.FromVersion.Title}</div>
                                        <div class="mb-3"><strong>Payment:</strong> $${requestData.FromVersion.PaymentAmount.toFixed(2)} (${requestData.FromVersion.PaymentType})</div>
                                        <div class="mb-3"><strong>Description:</strong> ${requestData.FromVersion.Description || 'N/A'}</div>
                                        ${requestData.FromVersion.Deliverables ? `<div class="mb-3"><strong>Deliverables:</strong> ${requestData.FromVersion.Deliverables}</div>` : ''}
                                    </div>
                                </div>
                            </div>
                            <div class="col-6">
                                <h6 class="fw-bold mb-3">Proposed Changes</h6>
                                <div class="card border border-primary mb-5">
                                    <div class="card-body">
                                        <div class="mb-3"><strong>Title:</strong> ${requestData.ProposedVersion.Title}</div>
                                        <div class="mb-3"><strong>Payment:</strong> $${requestData.ProposedVersion.PaymentAmount.toFixed(2)} (${requestData.ProposedVersion.PaymentType})</div>
                                        <div class="mb-3"><strong>Description:</strong> ${requestData.ProposedVersion.Description || 'N/A'}</div>
                                        ${requestData.ProposedVersion.Deliverables ? `<div class="mb-3"><strong>Deliverables:</strong> ${requestData.ProposedVersion.Deliverables}</div>` : ''}
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="separator my-5"></div>
                        <div class="mb-5">
                            <strong>Change Description:</strong><br>
                            ${requestData.ChangeDescription}
                        </div>
                        <div class="row">
                            <div class="col-4">
                                <div class="mb-3">
                                    <strong>Requested by:</strong> ${requestData.RequestedByRole}<br>
                                    <small class="text-muted">${new Date(requestData.RequestDate).toLocaleString()}</small>
                                </div>
                            </div>
                            <div class="col-4">
                                <div class="mb-3">
                                    <strong>Contract:</strong> ${requestData.ContractJobTitle}
                                </div>
                            </div>
                            <div class="col-4">
                                <div class="mb-3">
                                    <strong>Status:</strong> 
                                    <span class="badge badge-light-warning">${requestData.Status}</span>
                                </div>
                            </div>
                        </div>
                    `;
                });
            });

            // Handle search
            document.querySelector('[data-kt-pending-changes-filter="search"]').addEventListener('keyup', function(e) {
                const searchText = e.target.value.toLowerCase();
                document.querySelectorAll('[data-change-request]').forEach(card => {
                    const text = card.textContent.toLowerCase();
                    card.style.display = text.includes(searchText) ? 'block' : 'none';
                });
            });
        });
    </script>
}