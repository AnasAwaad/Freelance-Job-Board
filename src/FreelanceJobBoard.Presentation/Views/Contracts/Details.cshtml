@model FreelanceJobBoard.Application.Features.Contracts.Queries.GetContractDetails.ContractDetailsDto
@{
    ViewData["Title"] = "Contract Details";
    Layout = "~/Views/Shared/_DashboardLayout.cshtml";
}

@section Styles {
    <style>
        .attachment-card {
            transition: transform 0.2s ease-in-out, box-shadow 0.2s ease-in-out;
        }
        
        .attachment-card:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(0,0,0,0.15);
        }
        
        .file-icon {
            width: 48px;
            height: 48px;
            display: flex;
            align-items: center;
            justify-content: center;
            border-radius: 8px;
        }
        
        .file-icon.pdf {
            background-color: #fef2f2;
            color: #dc2626;
        }
        
        .file-icon.image {
            background-color: #f0f9ff;
            color: #0284c7;
        }
        
        .file-icon.document {
            background-color: #f0f9ff;
            color: #1d4ed8;
        }
        
        .file-icon.default {
            background-color: #f8fafc;
            color: #64748b;
        }
        
        .attachment-name {
            font-weight: 600;
            color: #1f2937;
            margin-bottom: 4px;
            word-break: break-word;
        }
        
        .attachment-size {
            font-size: 0.875rem;
            color: #6b7280;
            margin-bottom: 8px;
        }
        
        .btn-view {
            background-color: #eff6ff;
            border-color: #bfdbfe;
            color: #1d4ed8;
        }
        
        .btn-view:hover {
            background-color: #dbeafe;
            border-color: #93c5fd;
            color: #1e40af;
        }
        
        .btn-download {
            background-color: #f0fdf4;
            border-color: #bbf7d0;
            color: #059669;
        }
        
        .btn-download:hover {
            background-color: #dcfce7;
            border-color: #86efac;
            color: #047857;
        }
    </style>
}

<div class="d-flex flex-column flex-column-fluid">
    <!--begin::Toolbar-->
    <div id="kt_app_toolbar" class="app-toolbar py-3 py-lg-6">
        <div id="kt_app_toolbar_container" class="app-container container-xxl d-flex flex-stack">
            <div class="page-title d-flex flex-column justify-content-center flex-wrap me-3">
                <h1 class="page-heading d-flex text-dark fw-bold fs-3 flex-column justify-content-center my-0">Contract Details</h1>
                <ul class="breadcrumb breadcrumb-separatorless fw-semibold fs-7 my-0 pt-1">
                    <li class="breadcrumb-item text-muted">
                        <a asp-controller="Home" asp-action="Index" class="text-muted text-hover-primary">Home</a>
                    </li>
                    <li class="breadcrumb-item">
                        <span class="bullet bg-gray-400 w-5px h-2px"></span>
                    </li>
                    <li class="breadcrumb-item text-muted">
                        <a asp-action="Index" class="text-muted text-hover-primary">Contracts</a>
                    </li>
                    <li class="breadcrumb-item">
                        <span class="bullet bg-gray-400 w-5px h-2px"></span>
                    </li>
                    <li class="breadcrumb-item text-muted">Contract #@Model.Id</li>
                </ul>
            </div>
            <div class="d-flex align-items-center gap-2 gap-lg-3">
                @if (Model.ContractStatus != "Completed" && Model.ContractStatus != "Cancelled")
                {
                    <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-sm fw-bold btn-light-primary">
                        <i class="ki-duotone ki-pencil fs-4"></i>
                        Propose Changes
                    </a>
                }
                <a asp-action="History" asp-route-id="@Model.Id" class="btn btn-sm fw-bold btn-light-info">
                    <i class="ki-duotone ki-time fs-4"></i>
                    View History
                </a>
                <a asp-action="Index" class="btn btn-sm fw-bold btn-secondary">
                    <i class="ki-duotone ki-arrow-left fs-4"></i>
                    Back to Contracts
                </a>
            </div>
        </div>
    </div>
    <!--end::Toolbar-->

    <!--begin::Content-->
    <div id="kt_app_content" class="app-content flex-column-fluid">
        <div id="kt_app_content_container" class="app-container container-xxl">
            @if (TempData["Success"] != null)
            {
                <div class="alert alert-success alert-dismissible fade show" role="alert">
                    <i class="ki-duotone ki-check-circle fs-2 me-3">
                        <span class="path1"></span>
                        <span class="path2"></span>
                    </i>
                    @TempData["Success"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
            }

            @if (TempData["Error"] != null)
            {
                <div class="alert alert-danger alert-dismissible fade show" role="alert">
                    <i class="ki-duotone ki-cross-circle fs-2 me-3">
                        <span class="path1"></span>
                        <span class="path2"></span>
                    </i>
                    @TempData["Error"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
            }

            <!-- Temporary Debug Information -->
            @if (ViewBag.IsDebugMode != null && (bool)ViewBag.IsDebugMode)
            {
                <div class="alert alert-info">
                    <strong>Debug Information:</strong><br>
                    Last Version Update Date: @Model.LastVersionUpdateDate.ToString("yyyy-MM-dd HH:mm:ss") (@Model.LastVersionUpdateDate.Kind)<br>
                    Contract Created On: @Model.CreatedOn.ToString("yyyy-MM-dd HH:mm:ss") (@Model.CreatedOn.Kind)<br>
                    Current Version Number: @Model.CurrentVersionNumber<br>
                    Current Date: @DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss") (@DateTime.Now.Kind)<br>
                    UTC Now: @DateTime.UtcNow.ToString("yyyy-MM-dd HH:mm:ss") (@DateTime.UtcNow.Kind)
                </div>
            }

            <div class="row">
                <!-- Contract Status and Actions -->
                <div class="col-xl-4">
                    <div class="card mb-5 mb-xl-8 sticky-top">
                        <div class="card-header">
                            <div class="card-title">
                                <h3 class="fw-bold text-dark">Contract Status</h3>
                            </div>
                        </div>
                        <div class="card-body">
                            <div class="mb-7">
                                @if (Model.ContractStatus == "Pending")
                                {
                                    <span class="badge badge-light-warning fs-6">Pending</span>
                                }
                                else if (Model.ContractStatus == "Active")
                                {
                                    <span class="badge badge-light-success fs-6">Active</span>
                                }
                                else if (Model.ContractStatus == "Completed")
                                {
                                    <span class="badge badge-light-primary fs-6">Completed</span>
                                }
                                else if (Model.ContractStatus == "Cancelled")
                                {
                                    <span class="badge badge-light-danger fs-6">Cancelled</span>
                                }
                                else
                                {
                                    <span class="badge badge-light-secondary fs-6">Unknown</span>
                                }
                            </div>

                            <div class="separator my-5"></div>

                            <!-- Version Information -->
                            <div class="mb-5">
                                <div class="fw-bold mb-3">Current Version</div>
                                <div class="text-gray-600 fs-4 fw-bold">version @Model.CurrentVersionNumber</div>
                                <div class="text-gray-400 fs-7">
                                    Updated @Model.LastVersionUpdateDate.ToString("MMM dd, yyyy")
                                    @if (Model.LastVersionUpdateDate.Date != DateTime.Today)
                                    {
                                        <span class="text-muted">(@Model.LastVersionUpdateDate.ToString("h:mm tt"))</span>
                                    }
                                </div>
                            </div>

                            <div class="separator my-5"></div>

                            @if (Model.ContractStatus == "Pending")
                            {
                                <div class="mb-5">
                                    <button type="button" class="btn btn-success w-100 mb-3" data-action="start" data-contract-id="@Model.Id">
                                        <i class="ki-duotone ki-play fs-4 me-2">
                                            <span class="path1"></span>
                                            <span class="path2"></span>
                                        </i>
                                        Start Contract
                                    </button>
                                </div>
                            }

                            @if (Model.ContractStatus == "Active")
                            {
                                <div class="mb-5">
                                    <button type="button" class="btn btn-primary w-100 mb-3" data-action="complete" data-contract-id="@Model.Id">
                                        <i class="ki-duotone ki-check fs-4 me-2">
                                            <span class="path1"></span>
                                            <span class="path2"></span>
                                        </i>
                                        Mark Complete
                                    </button>
                                </div>
                            }

                            @if (Model.ContractStatus != "Completed" && Model.ContractStatus != "Cancelled")
                            {
                                <div class="mb-5">
                                    <button type="button" class="btn btn-light-danger w-100" data-action="cancel" data-contract-id="@Model.Id">
                                        <i class="ki-duotone ki-cross fs-4 me-2">
                                            <span class="path1"></span>
                                            <span class="path2"></span>
                                        </i>
                                        Cancel Contract
                                    </button>
                                </div>
                            }

                            <div class="separator my-5"></div>

                            <!-- Contract Information -->
                            <div class="mb-5">
                                <div class="fw-bold mb-3">Payment Amount</div>
                                <div class="text-gray-600 fs-2 fw-bold">$@Model.PaymentAmount.ToString("N2")</div>
                                @if (!string.IsNullOrEmpty(Model.AgreedPaymentType))
                                {
                                    <div class="text-gray-400 fs-7">@Model.AgreedPaymentType Payment</div>
                                }
                            </div>

                            @if (Model.ProjectDeadline.HasValue)
                            {
                                <div class="mb-5">
                                    <div class="fw-bold mb-3">Project Deadline</div>
                                    <div class="text-gray-600">@Model.ProjectDeadline.Value.ToString("MMMM dd, yyyy")</div>
                                </div>
                            }

                            <div class="mb-5">
                                <div class="fw-bold mb-3">Start Date</div>
                                <div class="text-gray-600">@Model.StartTime.ToString("MMMM dd, yyyy 'at' h:mm tt")</div>

                                @if (Model.EndTime.HasValue)
                                {
                                    <div class="fw-bold mt-5">End Date</div>
                                    <div class="text-gray-600">@Model.EndTime.Value.ToString("MMMM dd, yyyy 'at' h:mm tt")</div>
                                }

                                @if (Model.EstimatedTimelineDays > 0)
                                {
                                    <div class="fw-bold mt-5">Estimated Timeline</div>
                                    <div class="text-gray-600">@Model.EstimatedTimelineDays days</div>
                                }

                                <div class="fw-bold mt-5">Created</div>
                                <div class="text-gray-600">@Model.CreatedOn.ToString("MMMM dd, yyyy 'at' h:mm tt")</div>

                                @if (Model.LastUpdatedOn.HasValue)
                                {
                                    <div class="fw-bold mt-5">Last Updated</div>
                                    <div class="text-gray-600">@Model.LastUpdatedOn.Value.ToString("MMMM dd, yyyy 'at' h:mm tt")</div>
                                }
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Job and Party Details -->
                <div class="col-xl-8">
                    <!-- Current Contract Terms -->
                    <div class="card mb-5 mb-xl-10">
                        <div class="card-header">
                            <div class="card-title m-0">
                                <h3 class="fw-bold m-0">Current Contract Terms (version @Model.CurrentVersionNumber)</h3>
                            </div>
                        </div>
                        <div class="card-body p-9">
                            @if (!string.IsNullOrEmpty(Model.Title))
                            {
                                <div class="row mb-7">
                                    <label class="col-lg-4 fw-semibold text-muted">Contract Title</label>
                                    <div class="col-lg-8">
                                        <span class="fw-bold fs-6 text-gray-800">@Model.Title</span>
                                    </div>
                                </div>
                            }

                            @if (!string.IsNullOrEmpty(Model.Description))
                            {
                                <div class="row mb-7">
                                    <label class="col-lg-4 fw-semibold text-muted">Description</label>
                                    <div class="col-lg-8">
                                        <span class="fw-semibold fs-6 text-gray-800">@Model.Description</span>
                                    </div>
                                </div>
                            }

                            @if (!string.IsNullOrEmpty(Model.Deliverables))
                            {
                                <div class="row mb-7">
                                    <label class="col-lg-4 fw-semibold text-muted">Deliverables</label>
                                    <div class="col-lg-8">
                                        <span class="fw-semibold fs-6 text-gray-800">@Model.Deliverables</span>
                                    </div>
                                </div>
                            }

                            @if (!string.IsNullOrEmpty(Model.TermsAndConditions))
                            {
                                <div class="row mb-7">
                                    <label class="col-lg-4 fw-semibold text-muted">Terms & Conditions</label>
                                    <div class="col-lg-8">
                                        <span class="fw-semibold fs-6 text-gray-800">@Model.TermsAndConditions</span>
                                    </div>
                                </div>
                            }

                            @if (!string.IsNullOrEmpty(Model.AdditionalNotes))
                            {
                                <div class="row mb-7">
                                    <label class="col-lg-4 fw-semibold text-muted">Additional Notes</label>
                                    <div class="col-lg-8">
                                        <span class="fw-semibold fs-6 text-gray-800">@Model.AdditionalNotes</span>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>

                    <!-- Job Information -->
                    <div class="card mb-5 mb-xl-10">
                        <div class="card-header">
                            <div class="card-title m-0">
                                <h3 class="fw-bold m-0">Original Job Information</h3>
                            </div>
                        </div>
                        <div class="card-body p-9">
                            <div class="row mb-7">
                                <label class="col-lg-4 fw-semibold text-muted">Job Title</label>
                                <div class="col-lg-8">
                                    <span class="fw-bold fs-6 text-gray-800">@Model.JobTitle</span>
                                </div>
                            </div>

                            @if (!string.IsNullOrEmpty(Model.JobDescription))
                            {
                                <div class="row mb-7">
                                    <label class="col-lg-4 fw-semibold text-muted">Description</label>
                                    <div class="col-lg-8">
                                        <span class="fw-semibold fs-6 text-gray-800">@Model.JobDescription</span>
                                    </div>
                                </div>
                            }

                            @if (!string.IsNullOrEmpty(Model.CoverLetter))
                            {
                                <div class="row mb-7">
                                    <label class="col-lg-4 fw-semibold text-muted">Proposal Cover Letter</label>
                                    <div class="col-lg-8">
                                        <span class="fw-semibold fs-6 text-gray-800">@Model.CoverLetter</span>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>

                    <!-- Parties Information -->
                    <div class="card mb-5 mb-xl-10">
                        <div class="card-header">
                            <div class="card-title m-0">
                                <h3 class="fw-bold m-0">Contract Parties</h3>
                            </div>
                        </div>
                        <div class="card-body p-9">
                            <div class="row mb-8">
                                <div class="col-xl-6">
                                    <div class="d-flex align-items-center mb-5">
                                        <div class="symbol symbol-40px me-5">
                                            <div class="symbol-label bg-light-primary">
                                                <i class="ki-duotone ki-briefcase text-primary fs-2">
                                                    <span class="path1"></span>
                                                    <span class="path2"></span>
                                                </i>
                                            </div>
                                        </div>
                                        <div class="flex-grow-1">
                                            <a href="#" class="text-gray-800 text-hover-primary fs-5 fw-bold">@Model.ClientName</a>
                                            <span class="text-gray-400 fw-semibold d-block">Client</span>
                                        </div>
                                    </div>
                                    <div class="mb-3">
                                        <div class="fw-semibold text-gray-600">Email:</div>
                                        <div class="text-gray-800">@Model.ClientEmail</div>
                                    </div>
                                </div>

                                <div class="col-xl-6">
                                    <div class="d-flex align-items-center mb-5">
                                        <div class="symbol symbol-40px me-5">
                                            <div class="symbol-label bg-light-success">
                                                <i class="ki-duotone ki-profile-user text-success fs-2">
                                                    <span class="path1"></span>
                                                    <span class="path2"></span>
                                                    <span class="path3"></span>
                                                    <span class="path4"></span>
                                                </i>
                                            </div>
                                        </div>
                                        <div class="flex-grow-1">
                                            <a href="#" class="text-gray-800 text-hover-primary fs-5 fw-bold">@Model.FreelancerName</a>
                                            <span class="text-gray-400 fw-semibold d-block">Freelancer</span>
                                        </div>
                                    </div>
                                    <div class="mb-3">
                                        <div class="fw-semibold text-gray-600">Email:</div>
                                        <div class="text-gray-800">@Model.FreelancerEmail</div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Contract Actions and Versioning -->
                    <div class="card">
                        <div class="card-header">
                            <div class="card-title m-0">
                                <h3 class="fw-bold m-0">Contract Management</h3>
                            </div>
                        </div>
                        <div class="card-body p-9">
                            <div class="row">
                                @if (Model.ContractStatus != "Completed" && Model.ContractStatus != "Cancelled")
                                {
                                    <div class="col-xl-6 mb-5">
                                        <div class="card border border-primary">
                                            <div class="card-body text-center p-6">
                                                <i class="ki-duotone ki-pencil text-primary fs-2x mb-4">
                                                    <span class="path1"></span>
                                                    <span class="path2"></span>
                                                </i>
                                                <h4 class="fw-bold text-gray-800 mb-3">Propose Changes</h4>
                                                <p class="text-gray-600 mb-4">Suggest modifications to contract terms, payment, or deliverables</p>
                                                <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-primary">
                                                    Start Editing
                                                </a>
                                            </div>
                                        </div>
                                    </div>
                                }

                                <div class="col-xl-6 mb-5">
                                    <div class="card border border-info">
                                        <div class="card-body text-center p-6">
                                            <i class="ki-duotone ki-time text-info fs-2x mb-4">
                                                <span class="path1"></span>
                                                <span class="path2"></span>
                                            </i>
                                            <h4 class="fw-bold text-gray-800 mb-3">Version History</h4>
                                            <p class="text-gray-600 mb-4">View all contract versions and change requests</p>
                                            <a asp-action="History" asp-route-id="@Model.Id" class="btn btn-info">
                                                View History
                                            </a>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Handle contract actions
            document.querySelectorAll('[data-action]').forEach(function(button) {
                button.addEventListener('click', function(e) {
                    e.preventDefault();
                    
                    const contractId = this.getAttribute('data-contract-id');
                    const action = this.getAttribute('data-action');
                    
                    let title, text, confirmText, method, url;
                    
                    switch(action) {
                        case 'start':
                            title = 'Start Contract';
                            text = 'Are you sure you want to start this contract? This will change the status to Active.';
                            confirmText = 'Yes, Start Contract';
                            method = 'POST';
                            url = '/Contracts/Start';
                            break;
                        case 'complete':
                            title = 'Complete Contract';
                            text = 'Are you sure you want to mark this contract as completed? This will close the job and finalize the contract.';
                            confirmText = 'Yes, Complete Contract';
                            method = 'POST';
                            url = '/Contracts/Complete';
                            break;
                        case 'cancel':
                            title = 'Cancel Contract';
                            text = 'Are you sure you want to cancel this contract? This action cannot be undone.';
                            confirmText = 'Yes, Cancel Contract';
                            method = 'POST';
                            url = '/Contracts/Cancel';
                            break;
                        default:
                            return;
                    }
                    
                    if (confirm(`${title}\n\n${text}`)) {
                        // Create a form and submit it
                        const form = document.createElement('form');
                        form.method = method;
                        form.action = url;
                        
                        // Add CSRF token
                        const csrfToken = document.querySelector('input[name="__RequestVerificationToken"]');
                        if (csrfToken) {
                            const tokenInput = document.createElement('input');
                            tokenInput.type = 'hidden';
                            tokenInput.name = '__RequestVerificationToken';
                            tokenInput.value = csrfToken.value;
                            form.appendChild(tokenInput);
                        }
                        
                        // Add contract ID
                        const contractIdInput = document.createElement('input');
                        contractIdInput.type = 'hidden';
                        contractIdInput.name = 'contractId';
                        contractIdInput.value = contractId;
                        form.appendChild(contractIdInput);
                        
                        document.body.appendChild(form);
                        form.submit();
                    }
                });
            });
        });
    </script>
}

<!-- Hidden form for CSRF token -->
<form style="display: none;">
    @Html.AntiForgeryToken()
</form>