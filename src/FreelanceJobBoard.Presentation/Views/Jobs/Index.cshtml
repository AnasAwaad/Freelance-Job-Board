@model FreelanceJobBoard.Presentation.Models.DTOs.PagedResultDto<FreelanceJobBoard.Presentation.Models.ViewModels.JobViewModel>
@{
    ViewData["Title"] = "All Jobs";
    Layout = "~/Views/Shared/_DashboardLayout.cshtml";
}

<div class="d-flex flex-column flex-column-fluid">
    <!--begin::Toolbar-->
    <div id="kt_app_toolbar" class="app-toolbar py-3 py-lg-6">
        <div id="kt_app_toolbar_container" class="app-container container-fluid d-flex flex-stack">
            <div class="page-title d-flex flex-column justify-content-center flex-wrap me-3">
                <h1 class="page-heading d-flex text-dark fw-bold fs-3 flex-column justify-content-center my-0">All Jobs</h1>
                <ul class="breadcrumb breadcrumb-separatorless fw-semibold fs-7 my-0 pt-1">
                    <li class="breadcrumb-item text-muted">
                        <a asp-controller="Home" asp-action="Index" class="text-muted text-hover-primary">Home</a>
                    </li>
                    <li class="breadcrumb-item">
                        <span class="bullet bg-gray-400 w-5px h-2px"></span>
                    </li>
                    <li class="breadcrumb-item text-muted">Jobs</li>
                </ul>
            </div>
            <div class="d-flex align-items-center gap-2 gap-lg-3">
                <a asp-action="Create" class="btn btn-sm fw-bold btn-primary">
                    <i class="ki-duotone ki-plus fs-4"></i>
                    Create Job
                </a>
            </div>
        </div>
    </div>
    <!--end::Toolbar-->

    <!--begin::Content-->
    <div id="kt_app_content" class="app-content flex-column-fluid">
        <div id="kt_app_content_container" class="app-container container-fluid">
            
            <!-- Search and Filter -->
            <div class="card mb-5">
                <div class="card-body">
                    <form method="get" asp-action="Index">
                        <div class="row align-items-end">
                            <div class="col-md-4">
                                <label class="form-label">Search</label>
                                <input type="text" name="search" value="@ViewBag.Search" class="form-control" placeholder="Search jobs...">
                            </div>
                            <div class="col-md-3">
                                <label class="form-label">Sort By</label>
                                <select name="sortBy" class="form-select">
                                    <option value="">Default</option>
                                    <option value="title" selected="@(ViewBag.SortBy == "title")">Title</option>
                                    <option value="deadline" selected="@(ViewBag.SortBy == "deadline")">Deadline</option>
                                    <option value="budget" selected="@(ViewBag.SortBy == "budget")">Budget</option>
                                </select>
                            </div>
                            <div class="col-md-3">
                                <label class="form-label">Direction</label>
                                <select name="sortDirection" class="form-select">
                                    <option value="asc" selected="@(ViewBag.SortDirection == "asc")">Ascending</option>
                                    <option value="desc" selected="@(ViewBag.SortDirection == "desc")">Descending</option>
                                </select>
                            </div>
                            <div class="col-md-2">
                                <button type="submit" class="btn btn-primary w-100">Search</button>
                            </div>
                        </div>
                    </form>
                </div>
            </div>

            @if (Model?.Items != null && Model.Items.Any())
            {
                <!-- Jobs Grid -->
                <div class="row g-6 g-xl-9">
                    @foreach (var job in Model.Items)
                    {
                        <div class="col-md-6 col-xl-4">
                            <div class="card h-100">
                                <div class="card-header">
                                    <div class="card-title">
                                        <h3 class="fw-bold text-dark">@job.Title</h3>
                                    </div>
                                    <div class="card-toolbar">
                                        <span class="badge badge-light-@(job.Status == "Open" ? "success" : job.Status == "Cancelled" ? "danger" : "warning")">
                                            @job.Status
                                        </span>
                                    </div>
                                </div>
                                <div class="card-body">
                                    <p class="text-gray-600">@(job.Description?.Length > 100 ? job.Description.Substring(0, 100) + "..." : job.Description)</p>
                                    
                                    <div class="d-flex justify-content-between align-items-center mb-3">
                                        <span class="text-dark fw-bold fs-4">$@job.BudgetMin - $@job.BudgetMax</span>
                                        <span class="text-muted fs-7">Deadline: @job.Deadline.ToString("MMM dd, yyyy")</span>
                                    </div>

                                    @if (job.Categories.Any())
                                    {
                                        <div class="mb-3">
                                            @foreach (var category in job.Categories.Take(3))
                                            {
                                                <span class="badge badge-light-primary me-1">@category.Name</span>
                                            }
                                            @if (job.Categories.Count() > 3)
                                            {
                                                <span class="text-muted fs-8">+@(job.Categories.Count() - 3) more</span>
                                            }
                                        </div>
                                    }

                                    <div class="d-flex justify-content-between align-items-center">
                                        <span class="text-muted fs-8">@job.ViewsCount views</span>
                                        <a asp-action="Details" asp-route-id="@job.Id" class="btn btn-sm btn-light-primary">View Details</a>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>

                <!-- Pagination -->
                @if (Model.TotalPages > 1)
                {
                    <div class="d-flex justify-content-center mt-10">
                        <div class="pagination-wrapper">
                            <ul class="pagination">
                                @if (Model.HasPreviousPage)
                                {
                                    <li class="page-item">
                                        <a class="page-link" asp-action="Index" asp-route-pageNumber="@(Model.PageNumber - 1)" asp-route-search="@ViewBag.Search" asp-route-sortBy="@ViewBag.SortBy" asp-route-sortDirection="@ViewBag.SortDirection">Previous</a>
                                    </li>
                                }

                                @for (int i = Math.Max(1, Model.PageNumber - 2); i <= Math.Min(Model.TotalPages, Model.PageNumber + 2); i++)
                                {
                                    <li class="page-item @(i == Model.PageNumber ? "active" : "")">
                                        <a class="page-link" asp-action="Index" asp-route-pageNumber="@i" asp-route-search="@ViewBag.Search" asp-route-sortBy="@ViewBag.SortBy" asp-route-sortDirection="@ViewBag.SortDirection">@i</a>
                                    </li>
                                }

                                @if (Model.HasNextPage)
                                {
                                    <li class="page-item">
                                        <a class="page-link" asp-action="Index" asp-route-pageNumber="@(Model.PageNumber + 1)" asp-route-search="@ViewBag.Search" asp-route-sortBy="@ViewBag.SortBy" asp-route-sortDirection="@ViewBag.SortDirection">Next</a>
                                    </li>
                                }
                            </ul>
                        </div>
                    </div>
                }
            }
            else
            {
                <div class="card">
                    <div class="card-body text-center py-15">
                        <i class="ki-duotone ki-file-deleted fs-6x text-gray-600 mb-7">
                            <span class="path1"></span>
                            <span class="path2"></span>
                        </i>
                        <h2 class="fs-2 fw-bold text-gray-800 mb-4">No Jobs Found</h2>
                        <p class="fs-4 fw-semibold text-gray-600 mb-7">
                            There are no jobs available at the moment.
                        </p>
                        <a asp-action="Create" class="btn btn-primary">Create Your First Job</a>
                    </div>
                </div>
            }
        </div>
    </div>
    <!--end::Content-->
</div>