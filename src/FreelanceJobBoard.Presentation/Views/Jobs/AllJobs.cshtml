@using FreelanceJobBoard.Domain.Constants
@using FreelanceJobBoard.Presentation.Models.DTOs
@model PagedResultDto<JobViewModel>

@{
    ViewData["Title"] = "Browse Available Jobs";
    Layout = "_Layout";
}

<link rel="stylesheet" href="~/css/bootstrap.min.css" />
<link rel="stylesheet" href="~/css/alljobs.css" />
<link rel="stylesheet" href="~/css/nice-select.css" />
<link rel="stylesheet" href="~/css/jquery-ui.css" />
<link rel="stylesheet" href="~/css/font-awesome.min.css" />

<div class="job_listing_area plus_padding">
    <div class="container">
        <div class="row">

            <!-- FILTER SIDEBAR -->
            <div class="col-lg-4">
                <div class="job_filter white-bg">
                    <div class="form_inner white-bg">
                        <h3>Filter</h3>
                        <form method="get" asp-action="AllJobs" id="filterForm">
                            <div class="row">
                                <div class="col-lg-12">
                                    <div class="single_field">
                                        <input type="text" name="search" value="@ViewBag.Search" placeholder="Search keyword" />
                                    </div>
                                </div>

                                <div class="col-lg-12">
                                    <div class="single_field">
                                        <select name="category" class="nice-select wide">
                                            <option value="">Category</option>
                                            @foreach (var item in (IEnumerable<SelectListItem>)ViewBag.Categories ?? Enumerable.Empty<SelectListItem>())
                                            {
                                                <option value="@item.Value" selected="@(ViewBag.Category?.ToString() == item.Value)">@item.Text</option>
                                            }
                                        </select>
                                    </div>
                                </div>

                                <div class="col-lg-12">
                                    <div class="single_field">
                                        <select name="skill" class="nice-select wide">
                                            <option value="">Skills</option>
                                            @foreach (var item in (IEnumerable<SelectListItem>)ViewBag.Skills ?? Enumerable.Empty<SelectListItem>())
                                            {
                                                <option value="@item.Value" selected="@(ViewBag.Skill?.ToString() == item.Value)">@item.Text</option>
                                            }
                                        </select>
                                    </div>
                                </div>

                                <div class="col-lg-12">
                                    <div class="single_field">
                                        <select name="sortBy" class="nice-select wide">
                                            <option value="">Sort By</option>
                                            <option value="title" selected="@(ViewBag.SortBy == "title")">Title</option>
                                            <option value="deadline" selected="@(ViewBag.SortBy == "deadline")">Deadline</option>
                                            <option value="budget" selected="@(ViewBag.SortBy == "budget")">Budget</option>
                                        </select>
                                    </div>
                                </div>

                                <div class="col-lg-12">
                                    <div class="single_field">
                                        <button type="submit" class="boxed-btn3 w-100">
                                            <span class="btn-text">Apply Filters</span>
                                            <span class="btn-loading d-none">
                                                <i class="fa fa-spinner fa-spin"></i> Filtering...
                                            </span>
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </form>
                    </div>

                    <div class="reset_btn">
                        <a href="@Url.Action("AllJobs")" class="boxed-btn3 w-100">Reset</a>
                    </div>
                </div>
            </div>

            <!-- JOB LISTING -->
            <div class="col-lg-8">
                <div class="recent_joblist_wrap">
                    <div class="recent_joblist white-bg">
                        <div class="row align-items-center">
                            <div class="col-md-6">
                                <h4>Job Listing</h4>
                                @if (Model != null)
                                {
                                    <small class="text-muted">
                                        Showing @Model.Items.Count() of @Model.TotalCount jobs
                                        @if (!string.IsNullOrEmpty(ViewBag.Search as string))
                                        {
                                            <span> for "@ViewBag.Search"</span>
                                        }
                                    </small>
                                }
                            </div>
                            <div class="col-md-6">
                                <div class="serch_cat d-flex justify-content-end">
                                    <select name="sortDirection" class="wide nice-select" form="filterForm" onchange="document.getElementById('filterForm').submit();">
                                        <option value="@SortDirection.Ascending" selected="@(ViewBag.SortDirection == SortDirection.Ascending)">Ascending</option>
                                        <option value="@SortDirection.Descending" selected="@(ViewBag.SortDirection == SortDirection.Descending)">Descending</option>
                                    </select>
                                </div>
                            </div>
                        </div>

                        @* Active Filters Display *@
                        @if (!string.IsNullOrEmpty(ViewBag.Search as string) || ViewBag.Category != null || ViewBag.Skill != null)
                        {
                            <div class="active-filters mt-2">
                                <small class="text-muted">Active filters:</small>
                                @if (!string.IsNullOrEmpty(ViewBag.Search as string))
                                {
                                    <span class="badge badge-primary mr-1">Search: @ViewBag.Search</span>
                                }
                                @if (ViewBag.Category != null)
                                {
                                    var selectedCategory = ((List<SelectListItem>)ViewBag.Categories).FirstOrDefault(c => c.Value == ViewBag.Category.ToString());
                                    if (selectedCategory != null)
                                    {
                                        <span class="badge badge-info mr-1">Category: @selectedCategory.Text</span>
                                    }
                                }
                                @if (ViewBag.Skill != null)
                                {
                                    var selectedSkill = ((List<SelectListItem>)ViewBag.Skills).FirstOrDefault(s => s.Value == ViewBag.Skill.ToString());
                                    if (selectedSkill != null)
                                    {
                                        <span class="badge badge-success mr-1">Skill: @selectedSkill.Text</span>
                                    }
                                }
                                <a href="@Url.Action("AllJobs")" class="btn btn-sm btn-outline-secondary ml-2">Clear All</a>
                            </div>
                        }
                    </div>
                </div>

                <div class="job_lists m-0">
                    <div class="row text-center">
                        @if (Model == null || !Model.Items.Any())
                        {
                            <div class="col-12">
                                <div class="no_jobs text-center py-5">
                                    <div class="mb-3">
                                        <i class="fa fa-search fa-3x text-muted"></i>
                                    </div>
                                    <h4 class="text-muted">No Jobs Available</h4>
                                    <p class="text-muted">
                                        @if (!string.IsNullOrEmpty(ViewBag.Search as string) || ViewBag.Category != null || ViewBag.Skill != null)
                                        {
                                            @:No jobs match your current filters. Try adjusting your search criteria.
                                        }
                                        else
                                        {
                                            @:There are currently no jobs posted. Please check back later.
                                        }
                                    </p>
                                    @if (!string.IsNullOrEmpty(ViewBag.Search as string) || ViewBag.Category != null || ViewBag.Skill != null)
                                    {
                                        <a href="@Url.Action("AllJobs")" class="btn btn-primary">Clear Filters</a>
                                    }
                                </div>
                            </div>
                        }
                        else
                        {
                            @foreach (var job in Model.Items)
                            {
                                    <div class="col-lg-6 col-md-12">
                                        <div class="single_jobs white-bg flex-column d-flex">

                                            <div class="top-info d-flex justify-content-between align-items-center mb-3 w-100">
                                                <div class="category_jobs">
                                                    @foreach (var category in job.Categories)
                                                    {
                                                        @category.Name
                                                    }
                                                </div>
                                                <div class="price_jobs">
                                                    $@job.BudgetMin - $@job.BudgetMax
                                                </div>
                                            </div>
                                            <div class="jobs_conetent mb-3 mx-auto">
                                                @if (!string.IsNullOrEmpty(job.ClientName))
                                                {
                                                    <a href="@Url.Action("PublicJobDetails", "Jobs", new { jobId = job.Id })">
                                                        <h4 class="client-info d-flex align-items-center mb-2">
                                                            @if (!string.IsNullOrEmpty(job.ClientProfileImageUrl))
                                                            {
                                                                <img src="@job.ClientProfileImageUrl" alt="@job.ClientName" class="client-avatar me-2" style="width: 32px; height: 32px; border-radius: 50%; object-fit: cover;" />
                                                            }
                                                            else
                                                            {
                                                                <div class="client-avatar-placeholder me-2 d-flex align-items-center justify-content-center" style="width: 32px; height: 32px; border-radius: 50%; background-color: #007bff; color: white; font-size: 14px; font-weight: bold;">
                                                                    @(job.ClientName.Substring(0, 1).ToUpper())
                                                                </div>
                                                            }
                                                            <span>@job.ClientName</span>
                                                        </h4>
                                                    </a>
                                                    <!-- Client Rating Display -->
                                                    <div class="client-rating mb-2 d-flex align-items-center">
                                                        @{
                                                            var fullStars = (int)Math.Floor((double)job.ClientAverageRating);
                                                            var hasHalfStar = (double)job.ClientAverageRating - fullStars >= 0.5;
                                                            var emptyStars = 5 - fullStars - (hasHalfStar ? 1 : 0);
                                                        }
                                                        @for (int i = 0; i < fullStars; i++)
                                                        {
                                                            <i class="fa fa-star text-warning"></i>
                                                        }
                                                        @if (hasHalfStar)
                                                        {
                                                            <i class="fa fa-star-half-alt text-warning"></i>
                                                        }
                                                        @for (int i = 0; i < emptyStars; i++)
                                                        {
                                                            <i class="fa fa-star text-muted"></i>
                                                        }
                                                        <span class="rating-text ms-2 small text-muted">
                                                            @job.ClientAverageRating.ToString("F1") 
                                                            (@job.ClientTotalReviews review@(job.ClientTotalReviews == 1 ? "" : "s"))
                                                        </span>
                                                    </div>
                                                }
                                                else
                                                {
                                                    <a href="@Url.Action("PublicJobDetails", "Jobs", new { jobId = job.Id })"><h4>Client ID: @job.ClientId</h4></a>
                                                }
                                                <div class="position-info">
                                                    <h5 class="job-title">@job.Title</h5>
                                                    @if (!string.IsNullOrEmpty(job.Description) && job.Description.Length > 100)
                                                    {
                                                        <p class="job-description">@(job.Description.Substring(0, 100))...</p>
                                                    }
                                                    else if (!string.IsNullOrEmpty(job.Description))
                                                    {
                                                        <p class="job-description">@job.Description</p>
                                                    }
                                                </div>
                                            </div>

                                            <div class="jobs_right mx-auto">
                                                <div class="apply_now">
                                                    <a href="@Url.Action("PublicJobDetails", "Jobs", new { jobId = job.Id })" class="boxed-btn3">View Details</a>
                                                </div>
                                                <div class="date">
                                                    <p>Posted @job.TimeAgo</p>
                                                    <p>Deadline: @job.Deadline.ToString("MMM dd, yyyy")</p>
                                                </div>
                                            </div>

                                        </div>
                                    </div>
                                
                            }
                        }
                    </div>

                    <div class="row">
                        <ul class="pagination" id="paginationContainer">
                            @if (Model.HasPreviousPage)
                            {
                                var prevPageUrl = $"/Jobs/AllJobs?pageNumber={Model.PageNumber - 1}&search={ViewBag.Search}&category={ViewBag.Category}&skill={ViewBag.Skill}&sortBy={ViewBag.SortBy}&sortDirection={ViewBag.SortDirection}";
                                <li>
                                    <a href="@prevPageUrl">&laquo;</a>
                                </li>
                            }
                            else
                            {
                                <li class="disabled">
                                    <a href="#">&laquo;</a>
                                </li>
                            }

                            @* Page Number Links *@
                            @for (int i = 1; i <= Model.TotalPages; i++)
                            {
                                var pageUrl = $"/Jobs/AllJobs?pageNumber={i}&search={ViewBag.Search}&category={ViewBag.Category}&skill={ViewBag.Skill}&sortBy={ViewBag.SortBy}&sortDirection={ViewBag.SortDirection}";
                                <li class="@(i == Model.PageNumber ? "active" : "")">
                                    <a href="@pageUrl">@i</a>
                                </li>
                            }

                            @* Next Page Link *@
                            @if (Model.HasNextPage)
                            {
                                var nextPageUrl = $"/Jobs/AllJobs?pageNumber={Model.PageNumber + 1}&search={ViewBag.Search}&category={ViewBag.Category}&skill={ViewBag.Skill}&sortBy={ViewBag.SortBy}&sortDirection={ViewBag.SortDirection}";
                                <li>
                                    <a href="@nextPageUrl">&raquo;</a>
                                </li>
                            }
                            else
                            {
                                <li class="disabled">
                                    <a href="#">&raquo;</a>
                                </li>
                            }
                        </ul>
                    </div>
                </div>
            </div>

        </div>
    </div>
</div>

<script src="~/js/jquery-1.12.4.min.js"></script>
<script src="~/js/jquery-ui.js"></script>
<script src="~/js/owl.carousel.min.js"></script>
<script src="~/js/isotope.pkgd.min.js"></script>
<script src="~/js/jquery.counterup.min.js"></script>
<script src="~/js/wow.min.js"></script>
<script src="~/js/nice-select.min.js"></script>
<script src="~/js/jquery.magnific-popup.min.js"></script>
<script src="~/js/range.js"></script>
<script src="~/js/jquery.ajaxchimp.min.js"></script>
<script src="~/js/jquery.validate.min.js"></script>
<script src="~/js/alljobs.js"></script>