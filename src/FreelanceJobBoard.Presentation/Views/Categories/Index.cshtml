@model IEnumerable<CategoryViewModel>

@{
	ViewData["Title"] = "Categories";
	Layout = "~/Views/Shared/_DashboardLayout.cshtml";
	var categoryList = Model?.ToList() ?? new List<CategoryViewModel>();
	var hasCategories = categoryList.Any();
}

<div class="d-flex flex-column flex-column-fluid">
	<!--begin::Toolbar-->
	<div id="kt_app_toolbar" class="app-toolbar py-3 py-lg-6">
		<div id="kt_app_toolbar_container" class="app-container container-xxl d-flex flex-stack">
			<div class="page-title d-flex flex-column justify-content-center flex-wrap me-3">
				<h1 class="page-heading d-flex text-dark fw-bold fs-3 flex-column justify-content-center my-0">Categories</h1>
				<ul class="breadcrumb breadcrumb-separatorless fw-semibold fs-7 my-0 pt-1">
					<li class="breadcrumb-item text-muted">
						<a asp-controller="Home" asp-action="Index" class="text-muted text-hover-primary">Home</a>
					</li>
					<li class="breadcrumb-item">
						<span class="bullet bg-gray-400 w-5px h-2px"></span>
					</li>
					<li class="breadcrumb-item text-muted">Categories</li>
				</ul>
			</div>
			<div class="d-flex align-items-center gap-2 gap-lg-3">
				
			</div>
		</div>
	</div>
	<!--end::Toolbar-->

	<!--begin::Content-->
	<div id="kt_app_content" class="app-content flex-column-fluid">
		<div id="kt_app_content_container" class="app-container container-xxl">
			
			@if (TempData["Success"] != null)
			{
				<div class="alert alert-success alert-dismissible fade show" role="alert">
					@TempData["Success"]
					<button type="button" class="btn-close" data-bs-dismiss="alert"></button>
				</div>
			}

			@if (TempData["Error"] != null)
			{
				<div class="alert alert-danger alert-dismissible fade show" role="alert">
					@TempData["Error"]
					<button type="button" class="btn-close" data-bs-dismiss="alert"></button>
				</div>
			}

			<!--begin::Category-->
			<div class="card card-flush">
				<!--begin::Card header-->
				<div class="card-header d-flex align-items-center py-5 gap-2 gap-md-5">
					<div class="card-title">
						<!--begin::Search-->
						<div class="d-flex align-items-center position-relative my-1">
							<i class="ki-duotone ki-magnifier fs-1 position-absolute ms-4">
								<span class="path1"></span>
								<span class="path2"></span>
							</i>
							<input type="text" data-kt-filter="search" class="form-control form-control-solid w-250px ps-14" placeholder="Search Category" />
						</div>
						<!--end::Search-->
					</div>
					<div class="card-toolbar flex-row-fluid justify-content-end gap-5">
						@if (User.IsInRole("Admin"))
						{
							<a asp-action="Create" class="btn btn-sm fw-bold btn-primary">
								<i class="ki-duotone ki-plus fs-2"></i>
								Add Category
							</a>
						}
					</div>
				</div>
				<!--end::Card header-->

				<!--begin::Card body-->
				<div class="card-body pt-0">
					@if (hasCategories)
					{
						<!--begin::Table-->
						<div class="table-responsive">
							<table id="datatable" data-title="Categories Report" class="table align-middle border rounded table-row-dashed fs-6 g-5">
								<thead>
									<tr class="fw-bold fs-6 text-gray-800">
										<th class="text-center">Name</th>
										<th>Description</th>
										<th>Status</th> 
										<th class="text-center">Actions</th>
									</tr>
								</thead>
								<tbody class="js-tbody">
									@foreach (var category in categoryList)
									{
										<partial name="_CategoryRow" model="category" />
									}
								</tbody>
							</table>
						</div>
						<!--end::Table-->
					}
					else
					{
						<!--begin::Empty state-->
						<div class="d-flex flex-column flex-center py-10">
							<div class="mb-7">
								<i class="ki-duotone ki-category fs-3x text-gray-400">
									<span class="path1"></span>
									<span class="path2"></span>
									<span class="path3"></span>
									<span class="path4"></span>
								</i>
							</div>
							<h3 class="text-gray-600 fw-semibold mb-2">No Categories Found</h3>
							<p class="text-gray-400 mb-6">There are no categories available at the moment.</p>
							@if (User.IsInRole("Admin"))
							{
								<a asp-action="Create" class="btn btn-primary">
									<i class="ki-duotone ki-plus fs-2"></i>
									Create First Category
								</a>
							}
						</div>
						<!--end::Empty state-->
					}
				</div>
				<!--end::Card body-->
			</div>
			<!--end::Category-->
		</div>
	</div>
	<!--end::Content-->
</div>

@Html.AntiForgeryToken()

@section Styles {
	<link href="~/css/datatables.bundle.css" rel="stylesheet" />
}

@section Plugins {
	<script src="~/js/datatables.bundle.js"></script>
}

@section Scripts {
	<partial name="_ValidationScriptsPartial" />

	<script>
		$(document).ready(function () {
			// Handle permanent delete category
			$(document).on('click', '.js-delete-category-permanently', function(e) {
				e.preventDefault();
				
				const categoryId = $(this).data('category-id');
				const categoryName = $(this).data('category-name');
				
				if (confirm(`Are you sure you want to permanently delete the category "${categoryName}"?\n\nThis action cannot be undone and will fail if the category has associated jobs.`)) {
					$.ajax({
						url: '@Url.Action("DeleteCategoryPermanently", "Categories")',
						type: 'POST',
						data: {
							id: categoryId,
							__RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
						},
						success: function(response) {
							if (response.success) {
								// Show success message
								const alertHtml = `
									<div class="alert alert-success alert-dismissible fade show" role="alert">
										${response.message}
										<button type="button" class="btn-close" data-bs-dismiss="alert"></button>
									</div>
								`;
								$('#kt_app_content_container').prepend(alertHtml);
								
								// Reload page to reflect changes
								setTimeout(function() {
									location.reload();
								}, 1000);
							} else {
								// Show error message
								const alertHtml = `
									<div class="alert alert-danger alert-dismissible fade show" role="alert">
										${response.message}
										<button type="button" class="btn-close" data-bs-dismiss="alert"></button>
									</div>
								`;
								$('#kt_app_content_container').prepend(alertHtml);
							}
						},
						error: function(xhr) {
							alert('Error deleting category. Please try again.');
							console.error('Delete error:', xhr);
						}
					});
				}
			});

			// Initialize DataTable
			function initializeDataTable() {
				const $table = $('#datatable');
				if ($table.length === 0) {
					return;
				}

				const $tbody = $table.find('tbody');
				const rowCount = $tbody.find('tr').length;

				// Destroy existing DataTable if it exists
				if ($.fn.DataTable.isDataTable('#datatable')) {
					$('#datatable').DataTable().destroy();
				}

				// Only initialize DataTable if we have data rows
				if (rowCount > 0) {
					try {
						const dataTable = $table.DataTable({
							responsive: true,
							pageLength: 10,
							order: [[0, 'asc']],
							columnDefs: [
								{ orderable: false, targets: -1 } 
							],
							language: {
								search: "",
								searchPlaceholder: "Search categories...",
								info: "Showing _START_ to _END_ of _TOTAL_ categories",
								infoEmpty: "Showing 0 to 0 of 0 categories",
								infoFiltered: "(filtered from _MAX_ total categories)",
								lengthMenu: "Show _MENU_ categories",
								zeroRecords: "No matching categories found"
							},
							dom: 'rt<"row"<"col-sm-12 col-md-5"i><"col-sm-12 col-md-7"p>>',
							searching: true
						});

						// Custom search functionality
						$('input[data-kt-filter="search"]').off('keyup.categories').on('keyup.categories', function() {
							dataTable.search(this.value).draw();
						});
						
					} catch (error) {
						console.error('Error initializing DataTable:', error);
					}
				} else {
					// Still enable custom search for consistency
					$('input[data-kt-filter="search"]').off('keyup.categories').on('keyup.categories', function() {
						// For empty state, we can still provide feedback
						console.log('Search attempted on empty table:', this.value);
					});
				}
			}

			// Initialize DataTable after a short delay to ensure DOM is ready
			setTimeout(initializeDataTable, 100);
		});
	</script>
}
