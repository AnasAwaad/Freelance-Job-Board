@model FreelanceJobBoard.Presentation.Models.ViewModels.JobDetailsViewModel
@{
    ViewData["Title"] = "Job Details";
    Layout = "~/Views/Shared/_DashboardLayout.cshtml";
    
    var statusClass = Model.Status switch
    {
        "Pending" => "badge-light-warning",
        "Open" => "badge-light-success",
        "Cancelled" => "badge-light-danger",
        _ => "badge-light-secondary"
    };
}

<div class="d-flex flex-column flex-column-fluid">
    <!--begin::Toolbar-->
    <div id="kt_app_toolbar" class="app-toolbar py-3 py-lg-6">
        <div id="kt_app_toolbar_container" class="app-container container-xxl d-flex flex-stack">
            <div class="page-title d-flex flex-column justify-content-center flex-wrap me-3">
                <h1 class="page-heading d-flex text-dark fw-bold fs-3 flex-column justify-content-center my-0">Job Details</h1>
                <ul class="breadcrumb breadcrumb-separatorless fw-semibold fs-7 my-0 pt-1">
                    <li class="breadcrumb-item text-muted">
                        <a asp-controller="Admin" asp-action="Index" class="text-muted text-hover-primary">Admin</a>
                    </li>
                    <li class="breadcrumb-item">
                        <span class="bullet bg-gray-400 w-5px h-2px"></span>
                    </li>
                    <li class="breadcrumb-item text-muted">
                        <a asp-action="JobManagement" class="text-muted text-hover-primary">Job Management</a>
                    </li>
                    <li class="breadcrumb-item">
                        <span class="bullet bg-gray-400 w-5px h-2px"></span>
                    </li>
                    <li class="breadcrumb-item text-muted">Details</li>
                </ul>
            </div>
            <div class="d-flex align-items-center gap-2 gap-lg-3">
                <a asp-action="JobManagement" class="btn btn-sm fw-bold btn-light-secondary">
                    <i class="ki-duotone ki-arrow-left fs-4"></i>
                    Back to Jobs
                </a>
            </div>
        </div>
    </div>
    <!--end::Toolbar-->

    <!--begin::Content-->
    <div id="kt_app_content" class="app-content flex-column-fluid">
        <div id="kt_app_content_container" class="app-container container-xxl">
            
            @if (TempData["Success"] != null)
            {
                <div class="alert alert-success alert-dismissible fade show" role="alert">
                    @TempData["Success"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                </div>
            }

            @if (TempData["Error"] != null)
            {
                <div class="alert alert-danger alert-dismissible fade show" role="alert">
                    @TempData["Error"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                </div>
            }

            <div class="row">
                <!-- Job Details -->
                <div class="col-xl-8">
                    <div class="card mb-8">
                        <div class="card-header">
                            <div class="card-title">
                                <h3 class="fw-bold text-dark">Job Information</h3>
                            </div>
                            <div class="card-toolbar">
                                <span class="badge @statusClass fs-7 fw-bold">@Model.Status</span>
                            </div>
                        </div>
                        <div class="card-body">
                            <div class="mb-8">
                                <h4 class="fs-5 fw-bold text-gray-900 mb-3">Title</h4>
                                <p class="text-gray-700 fs-6">@Model.Title</p>
                            </div>

                            <div class="mb-8">
                                <h4 class="fs-5 fw-bold text-gray-900 mb-3">Description</h4>
                                <div class="text-gray-700 fs-6">
                                    @Html.Raw(Model.Description.Replace("\n", "<br>"))
                                </div>
                            </div>

                            @if (!string.IsNullOrEmpty(Model.ClientName))
                            {
                                <div class="mb-8">
                                    <h4 class="fs-5 fw-bold text-gray-900 mb-3">Client</h4>
                                    <p class="text-gray-700 fs-6">@Model.ClientName</p>
                                </div>
                            }

                            @if (Model.CreatedOn != DateTime.MinValue)
                            {
                                <div class="mb-8">
                                    <h4 class="fs-5 fw-bold text-gray-900 mb-3">Created Date</h4>
                                    <p class="text-gray-700 fs-6">
                                        @Model.CreatedOn.ToString("MMMM dd, yyyy 'at' hh:mm tt")
                                    </p>
                                </div>
                            }
                        </div>
                    </div>
                </div>

                <!-- Job Summary -->
                <div class="col-xl-4">
                    <div class="card mb-8">
                        <div class="card-header">
                            <div class="card-title">
                                <h3 class="fw-bold text-dark">Job Summary</h3>
                            </div>
                        </div>
                        <div class="card-body">
                            <div class="d-flex flex-stack mb-5">
                                <span class="text-gray-700 fw-bold fs-6">Budget Range:</span>
                                <span class="text-dark fw-bold fs-4">$@Model.BudgetMin.ToString("N0") - $@Model.BudgetMax.ToString("N0")</span>
                            </div>
                            
                            @if (Model.Deadline != DateTime.MinValue)
                            {
                                <div class="d-flex flex-stack mb-5">
                                    <span class="text-gray-700 fw-bold fs-6">Deadline:</span>
                                    <span class="text-dark fw-bold fs-6">
                                        @Model.Deadline.ToString("MMMM dd, yyyy")
                                    </span>
                                </div>
                            }

                            <div class="d-flex flex-stack mb-5">
                                <span class="text-gray-700 fw-bold fs-6">Status:</span>
                                <span class="badge @statusClass">@Model.Status</span>
                            </div>

                            <div class="separator my-5"></div>

                            @if (Model.Status == "Pending")
                            {
                                <div class="d-flex flex-column gap-3">
                                    <button type="button" class="btn btn-success btn-sm" 
                                            data-bs-toggle="modal" 
                                            data-bs-target="#approveModal" 
                                            data-job-id="@Model.Id" 
                                            data-job-title="@Model.Title">
                                        <i class="ki-duotone ki-check fs-4 me-1"></i>
                                        Approve Job
                                    </button>
                                    
                                    <button type="button" class="btn btn-danger btn-sm" 
                                            data-bs-toggle="modal" 
                                            data-bs-target="#rejectModal" 
                                            data-job-id="@Model.Id" 
                                            data-job-title="@Model.Title">
                                        <i class="ki-duotone ki-cross fs-4 me-1"></i>
                                        Reject Job
                                    </button>
                                </div>
                            }
                            else
                            {
                                <div class="alert alert-info">
                                    <i class="ki-duotone ki-information fs-2 me-2">
                                        <span class="path1"></span>
                                        <span class="path2"></span>
                                        <span class="path3"></span>
                                    </i>
                                    This job has already been @Model.Status.ToLower().
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!--end::Content-->
</div>

<!-- Approve Job Modal -->
<div class="modal fade" id="approveModal" tabindex="-1" aria-labelledby="approveModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form asp-action="ApproveJob" method="post">
                <div class="modal-header">
                    <h5 class="modal-title" id="approveModalLabel">Approve Job</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <input type="hidden" name="jobId" id="approveJobId" />
                    <p>Are you sure you want to approve the job "<strong id="approveJobTitle"></strong>"?</p>
                    <div class="mb-3">
                        <label for="approveMessage" class="form-label">Message to Client (Optional)</label>
                        <textarea name="message" id="approveMessage" class="form-control" rows="3" 
                                  placeholder="Enter any message you'd like to send to the client..."></textarea>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-success">
                        <i class="ki-duotone ki-check fs-4"></i>
                        Approve Job
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Reject Job Modal -->
<div class="modal fade" id="rejectModal" tabindex="-1" aria-labelledby="rejectModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form asp-action="RejectJob" method="post">
                <div class="modal-header">
                    <h5 class="modal-title" id="rejectModalLabel">Reject Job</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <input type="hidden" name="jobId" id="rejectJobId" />
                    <p>Are you sure you want to reject the job "<strong id="rejectJobTitle"></strong>"?</p>
                    <div class="mb-3">
                        <label for="rejectMessage" class="form-label">Reason for Rejection *</label>
                        <textarea name="message" id="rejectMessage" class="form-control" rows="3" required
                                  placeholder="Please provide a reason for rejecting this job..."></textarea>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-danger">
                        <i class="ki-duotone ki-cross fs-4"></i>
                        Reject Job
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Handle approve modal
            var approveModal = document.getElementById('approveModal');
            if (approveModal) {
                approveModal.addEventListener('show.bs.modal', function(event) {
                    const button = event.relatedTarget;
                    const jobId = button.getAttribute('data-job-id');
                    const jobTitle = button.getAttribute('data-job-title');
                    
                    document.getElementById('approveJobId').value = jobId;
                    document.getElementById('approveJobTitle').textContent = jobTitle;
                });
            }

            // Handle reject modal
            var rejectModal = document.getElementById('rejectModal');
            if (rejectModal) {
                rejectModal.addEventListener('show.bs.modal', function(event) {
                    const button = event.relatedTarget;
                    const jobId = button.getAttribute('data-job-id');
                    const jobTitle = button.getAttribute('data-job-title');
                    
                    document.getElementById('rejectJobId').value = jobId;
                    document.getElementById('rejectJobTitle').textContent = jobTitle;
                });
            }
        });
    </script>
}