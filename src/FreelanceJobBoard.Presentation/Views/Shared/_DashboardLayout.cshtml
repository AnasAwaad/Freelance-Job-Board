@using FreelanceJobBoard.Domain.Constants
@using FreelanceJobBoard.Domain.Identity
@using Microsoft.AspNetCore.Identity
@using System.Security.Claims

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="utf-8" />
	<meta name="viewport" content="width=device-width, initial-scale=1.0" />
	<title>HireUp - @ViewData["Title"]</title>
	<!--begin::Fonts(mandatory for all pages)-->
	<link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Inter:300,400,500,600,700" />
	<!--end::Fonts-->
	<!--begin::Global Stylesheets Bundle(mandatory for all pages)-->
	<link href="~/css/plugins.bundle.css" rel="stylesheet" />
	<link href="~/css/style.bundle.css" rel="stylesheet" type="text/css" />
	<!--end::Global Stylesheets Bundle-->

	@await RenderSectionAsync("Styles", required: false)
	<link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
</head>
<body id="kt_app_body" data-kt-app-layout="dark-sidebar" data-kt-app-header-fixed="true" data-kt-app-sidebar-enabled="true" data-kt-app-sidebar-fixed="true" data-kt-app-sidebar-hoverable="true" data-kt-app-sidebar-push-header="true" data-kt-app-sidebar-push-toolbar="true" data-kt-app-sidebar-push-footer="true" data-kt-app-toolbar-enabled="true" class="app-default">
	<!--begin::Theme mode setup on page load-->
	<script>var defaultThemeMode = "light"; var themeMode; if (document.documentElement) { if (document.documentElement.hasAttribute("data-bs-theme-mode")) { themeMode = document.documentElement.getAttribute("data-bs-theme-mode"); } else { if (localStorage.getItem("data-bs-theme") !== null) { themeMode = localStorage.getItem("data-bs-theme"); } else { themeMode = defaultThemeMode; } } if (themeMode === "system") { themeMode = window.matchMedia("(prefers-color-scheme: dark)").matches ? "light" : "light"; } document.documentElement.setAttribute("data-bs-theme", themeMode); }</script>
	<!--end::Theme mode setup on page load-->
	@if (User.Identity != null && User.Identity.IsAuthenticated)
	{
		<!--begin::App-->
		<div class="d-flex flex-column flex-root app-root" id="kt_app_root">
			<!--begin::Page-->
			<div class="app-page flex-column flex-column-fluid" id="kt_app_page">
				<!--begin::Header-->
				<partial name="_DashboardHeader" />
				<!--end::Header-->
				<!--begin::Wrapper-->
				<div class="app-wrapper flex-column flex-row-fluid" id="kt_app_wrapper">
					<!--begin::Sidebar-->
					<partial name="_DashboardAside" />
					<!--end::Sidebar-->
					<!--begin::Main-->
					<div class="app-main flex-column flex-row-fluid" id="kt_app_main">
						<!--begin::Content wrapper-->
						<div class="d-flex flex-column flex-column-fluid">
							<!--begin::Content-->
							<div id="kt_app_content" class="app-content flex-column-fluid">
								<!--begin::Content container-->
								<div id="kt_app_content_container" class="app-container container-fluid">
									@RenderBody()
								</div>
								<!--end::Content container-->
							</div>
							<!--end::Content-->
						</div>
						<!--end::Content wrapper-->
					</div>
					<!--end:::Main-->
				</div>
				<!--end::Wrapper-->
			</div>
			<!--end::Page-->
		</div>
		<!--end::App-->
	}
	else
	{
		@RenderBody()
	}

	<!--end::Drawers-->
	<!--begin::Scrolltop-->
	<div id="kt_scrolltop" class="scrolltop" data-kt-scrolltop="true">
		<i class="ki-duotone ki-arrow-up">
			<span class="path1"></span>
			<span class="path2"></span>
		</i>
	</div>

	<!--end::Scrolltop-->
	<!--begin::Modal-->
	<partial name="_Modal" />
	<!--end::Modal-->
	<!--begin::Javascript-->
	<script>var hostUrl = "assets/";</script>
	<!--begin::Javascript-->
	<!--begin::Global Javascript Bundle(mandatory for all pages)-->
	<script src="~/js/plugins.bundle.js"></script>
	<script src="~/js/scripts.bundle.js"></script>
	<!--end::Global Javascript Bundle-->
	<!--begin::Bootbox-->
	<script src="~/lib/bootbox.js/bootbox.min.js"></script>
	<!--end::Bootbox-->
	<script src="~/lib/microsoft-signalr/signalr.min.js"></script>

	@await RenderSectionAsync("Plugins", required: false)
	<script src="~/js/site.js" asp-append-version="true"></script>
	@await RenderSectionAsync("Scripts", required: false)
	<script src="~/js/notification.js"></script>
	<!-- Logout handling script -->
	<script>
		document.addEventListener('DOMContentLoaded', function() {
			// Ensure all logout forms work correctly
			document.querySelectorAll('form[action*="Logout"]').forEach(function(form) {
				form.addEventListener('submit', function(e) {
					// Prevent multiple submissions
					const submitBtn = this.querySelector('button[type="submit"]');
					if (submitBtn) {
						submitBtn.disabled = true;
						setTimeout(() => {
							if (submitBtn) submitBtn.disabled = false;
						}, 3000); // Re-enable after 3 seconds as fallback
					}
				});
			});
			
			// Handle logout links that should be forms
			document.querySelectorAll('a[href*="Logout"]').forEach(function(link) {
				link.addEventListener('click', function(e) {
					e.preventDefault();
					console.warn('Logout link clicked - should use POST form instead');
					
					// Create and submit a temporary form for logout
					const form = document.createElement('form');
					form.method = 'POST';
					form.action = '/Auth/Logout';
					
					// Add antiforgery token if available
					const token = document.querySelector('input[name="__RequestVerificationToken"]');
					if (token) {
						const tokenInput = document.createElement('input');
						tokenInput.type = 'hidden';
						tokenInput.name = '__RequestVerificationToken';
						tokenInput.value = token.value;
						form.appendChild(tokenInput);
					}
					
					document.body.appendChild(form);
					form.submit();
				});
			});
		});
	</script>
	<!--end::Javascript-->

	<style>
	.object-fit-cover {
		object-fit: cover;
	}
	</style>
</body>

<!--end::Body-->
</html>
