@model FreelanceJobBoard.Presentation.Models.ViewModels.CreateReviewViewModel
@{
    ViewData["Title"] = "Submit Review";
    Layout = "~/Views/Shared/_DashboardLayout.cshtml";
}

<div class="d-flex flex-column flex-column-fluid">
    <!--begin::Toolbar-->
    <div id="kt_app_toolbar" class="app-toolbar py-3 py-lg-6">
        <div id="kt_app_toolbar_container" class="app-container container-xxl d-flex flex-stack">
            <div class="page-title d-flex flex-column justify-content-center flex-wrap me-3">
                <h1 class="page-heading d-flex text-dark fw-bold fs-3 flex-column justify-content-center my-0">Submit Review</h1>
                <ul class="breadcrumb breadcrumb-separatorless fw-semibold fs-7 my-0 pt-1">
                    <li class="breadcrumb-item text-muted">
                        <a asp-controller="Jobs" asp-action="Index" class="text-muted text-hover-primary">Jobs</a>
                    </li>
                    <li class="breadcrumb-item">
                        <span class="bullet bg-gray-400 w-5px h-2px"></span>
                    </li>
                    <li class="breadcrumb-item text-muted">
                        <a asp-controller="Jobs" asp-action="Details" asp-route-id="@Model.JobId" class="text-muted text-hover-primary">@Model.JobTitle</a>
                    </li>
                    <li class="breadcrumb-item">
                        <span class="bullet bg-gray-400 w-5px h-2px"></span>
                    </li>
                    <li class="breadcrumb-item text-muted">Submit Review</li>
                </ul>
            </div>
            <div class="d-flex align-items-center gap-2 gap-lg-3">
                <a asp-controller="Jobs" asp-action="Details" asp-route-id="@Model.JobId" class="btn btn-sm fw-bold btn-secondary">
                    <i class="ki-duotone ki-arrow-left fs-4"></i>
                    Back to Job
                </a>
            </div>
        </div>
    </div>
    <!--end::Toolbar-->

    <!--begin::Content-->
    <div id="kt_app_content" class="app-content flex-column-fluid">
        <div id="kt_app_content_container" class="app-container container-xxl">
            
            @if (TempData["Error"] != null)
            {
                <div class="alert alert-danger alert-dismissible fade show" role="alert">
                    <i class="ki-duotone ki-cross fs-2hx text-danger me-4">
                        <span class="path1"></span>
                        <span class="path2"></span>
                    </i>
                    @TempData["Error"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                </div>
            }

            <div class="row">
                <!-- Review Form -->
                <div class="col-xl-8">
                    <div class="card mb-5 mb-xl-8">
                        <div class="card-header">
                            <div class="card-title">
                                <h3 class="fw-bold text-dark">
                                    <span style="color: #ffc107; font-size: 1.5rem;">★</span>
                                    Review @Model.RevieweeName
                                </h3>
                            </div>
                        </div>
                        <div class="card-body">
                            <form asp-action="Create" method="post" class="form">
                                @Html.AntiForgeryToken()
                                @Html.HiddenFor(m => m.JobId)
                                @Html.HiddenFor(m => m.RevieweeId)
                                @Html.HiddenFor(m => m.ReviewType)

                                <!-- Overall Rating -->
                                <div class="row mb-8">
                                    <div class="col-xl-12">
                                        <div class="fv-row">
                                            <label class="form-label fs-6 fw-bold required">@Html.DisplayNameFor(m => m.Rating)</label>
                                            <div class="rating-container mb-3">
                                                <div class="star-rating" data-rating="@Model.Rating" data-target="Rating">
                                                    @for (int i = 1; i <= 5; i++)
                                                    {
                                                        <span class="star @(i <= Model.Rating ? "filled" : "")" data-value="@i">★</span>
                                                    }
                                                </div>
                                                <input type="hidden" asp-for="Rating" class="rating-value" />
                                                <div class="rating-feedback mt-2">
                                                    <span class="feedback-text text-muted fs-7"></span>
                                                </div>
                                            </div>
                                            <span asp-validation-for="Rating" class="text-danger"></span>
                                        </div>
                                    </div>
                                </div>

                                <!-- Detailed Ratings -->
                                <div class="row mb-8">
                                    <div class="col-xl-4">
                                        <div class="fv-row">
                                            <label class="form-label fs-6 fw-bold">@Html.DisplayNameFor(m => m.CommunicationRating)</label>
                                            <div class="rating-container">
                                                <div class="star-rating star-rating-sm" data-rating="@(Model.CommunicationRating ?? 0)" data-target="CommunicationRating">
                                                    @for (int i = 1; i <= 5; i++)
                                                    {
                                                        <span class="star @(i <= (Model.CommunicationRating ?? 0) ? "filled" : "")" data-value="@i">★</span>
                                                    }
                                                </div>
                                                <input type="hidden" asp-for="CommunicationRating" class="rating-value" />
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-xl-4">
                                        <div class="fv-row">
                                            <label class="form-label fs-6 fw-bold">@Html.DisplayNameFor(m => m.QualityRating)</label>
                                            <div class="rating-container">
                                                <div class="star-rating star-rating-sm" data-rating="@(Model.QualityRating ?? 0)" data-target="QualityRating">
                                                    @for (int i = 1; i <= 5; i++)
                                                    {
                                                        <span class="star @(i <= (Model.QualityRating ?? 0) ? "filled" : "")" data-value="@i">★</span>
                                                    }
                                                </div>
                                                <input type="hidden" asp-for="QualityRating" class="rating-value" />
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-xl-4">
                                        <div class="fv-row">
                                            <label class="form-label fs-6 fw-bold">@Html.DisplayNameFor(m => m.TimelinessRating)</label>
                                            <div class="rating-container">
                                                <div class="star-rating star-rating-sm" data-rating="@(Model.TimelinessRating ?? 0)" data-target="TimelinessRating">
                                                    @for (int i = 1; i <= 5; i++)
                                                    {
                                                        <span class="star @(i <= (Model.TimelinessRating ?? 0) ? "filled" : "")" data-value="@i">★</span>
                                                    }
                                                </div>
                                                <input type="hidden" asp-for="TimelinessRating" class="rating-value" />
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <!-- Review Comment -->
                                <div class="row mb-8">
                                    <div class="col-xl-12">
                                        <div class="fv-row">
                                            <label class="form-label fs-6 fw-bold required">@Html.DisplayNameFor(m => m.Comment)</label>
                                            <textarea asp-for="Comment" class="form-control" rows="6" placeholder="Share your experience working with @Model.RevieweeName. What went well? What could be improved?"></textarea>
                                            <span asp-validation-for="Comment" class="text-danger"></span>
                                            <div class="form-text">Maximum 1000 characters</div>
                                        </div>
                                    </div>
                                </div>

                                <!-- Tags -->
                                <div class="row mb-8">
                                    <div class="col-xl-12">
                                        <div class="fv-row">
                                            <label class="form-label fs-6 fw-bold">@Html.DisplayNameFor(m => m.Tags)</label>
                                            <input asp-for="Tags" class="form-control" placeholder="e.g., professional, responsive, creative, detail-oriented" />
                                            <div class="form-text">Add tags to highlight key strengths (comma-separated)</div>
                                        </div>
                                    </div>
                                </div>

                                <!-- Recommendation -->
                                <div class="row mb-8">
                                    <div class="col-xl-12">
                                        <div class="fv-row">
                                            <div class="form-check form-check-custom form-check-solid">
                                                <input asp-for="WouldRecommend" class="form-check-input" type="checkbox" />
                                                <label class="form-check-label fs-6 fw-bold" asp-for="WouldRecommend">
                                                    @Html.DisplayNameFor(m => m.WouldRecommend)
                                                </label>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <!-- Visibility -->
                                <div class="row mb-8">
                                    <div class="col-xl-12">
                                        <div class="fv-row">
                                            <div class="form-check form-check-custom form-check-solid">
                                                <input asp-for="IsVisible" class="form-check-input" type="checkbox" />
                                                <label class="form-check-label fs-6 fw-bold" asp-for="IsVisible">
                                                    @Html.DisplayNameFor(m => m.IsVisible)
                                                </label>
                                                <div class="form-text">Public reviews help build trust in our community</div>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <!-- Submit Button -->
                                <div class="row">
                                    <div class="col-xl-12">
                                        <div class="d-flex justify-content-end">
                                            <button type="submit" class="btn btn-primary" id="submitReviewBtn">
                                                <i class="ki-duotone ki-check fs-2">
                                                    <span class="path1"></span>
                                                    <span class="path2"></span>
                                                </i>
                                                <span class="indicator-label">Submit Review</span>
                                                <span class="indicator-progress">Please wait...
                                                    <span class="spinner-border spinner-border-sm align-middle ms-2"></span>
                                                </span>
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>

                <!-- Sidebar Information -->
                <div class="col-xl-4">
                    <div class="card mb-5 mb-xl-8">
                        <div class="card-header">
                            <div class="card-title">
                                <h3 class="fw-bold text-dark">Job Information</h3>
                            </div>
                        </div>
                        <div class="card-body">
                            <div class="mb-7">
                                <div class="d-flex align-items-center mb-3">
                                    <i class="ki-duotone ki-briefcase fs-3 text-gray-500 me-3">
                                        <span class="path1"></span>
                                        <span class="path2"></span>
                                    </i>
                                    <div>
                                        <div class="fw-bold text-gray-800">@Model.JobTitle</div>
                                        <div class="text-gray-600 fs-7">Job #@Model.JobId</div>
                                    </div>
                                </div>
                            </div>
                            
                            <div class="separator my-5"></div>
                            
                            <div class="mb-7">
                                <h5 class="fw-bold text-gray-800 mb-3">Review Tips</h5>
                                <ul class="list-unstyled text-gray-600 fs-7">
                                    <li class="mb-2">
                                        <i class="ki-duotone ki-check text-success fs-6 me-2">
                                            <span class="path1"></span>
                                            <span class="path2"></span>
                                        </i>
                                        Be honest and constructive
                                    </li>
                                    <li class="mb-2">
                                        <i class="ki-duotone ki-check text-success fs-6 me-2">
                                            <span class="path1"></span>
                                            <span class="path2"></span>
                                        </i>
                                        Focus on specific examples
                                    </li>
                                    <li class="mb-2">
                                        <i class="ki-duotone ki-check text-success fs-6 me-2">
                                            <span class="path1"></span>
                                            <span class="path2"></span>
                                        </i>
                                        Highlight strengths and areas for improvement
                                    </li>
                                    <li class="mb-2">
                                        <i class="ki-duotone ki-check text-success fs-6 me-2">
                                            <span class="path1"></span>
                                            <span class="path2"></span>
                                        </i>
                                        Help others make informed decisions
                                    </li>
                                </ul>
                            </div>
                            
                            <!-- Star Rating Test -->
                            <div class="separator my-5"></div>
                            <div class="mb-7">
                                <h5 class="fw-bold text-gray-800 mb-3">
                                    <span style="color: #ffc107;">★</span>
                                    Star Rating Test
                                </h5>
                                <p class="text-gray-600 fs-7 mb-3">Click the stars below to test:</p>
                                
                                <div class="bg-light p-4 rounded mb-3">
                                    <label class="form-label fs-7 fw-bold mb-2">Test Rating:</label>
                                    <div class="star-rating" data-rating="0" data-target="test">
                                        <span class="star" data-value="1">★</span>
                                        <span class="star" data-value="2">★</span>
                                        <span class="star" data-value="3">★</span>
                                        <span class="star" data-value="4">★</span>
                                        <span class="star" data-value="5">★</span>
                                    </div>
                                    <div class="mt-2">
                                        <span class="feedback-text text-muted fs-8">Click a star to rate</span>
                                    </div>
                                </div>
                                
                                <!-- Static Examples -->
                                <div class="mb-3">
                                    <span class="text-gray-700 fs-8">5 stars: </span>
                                    <span style="color: #ffc107;">★★★★★</span>
                                </div>
                                <div class="mb-3">
                                    <span class="text-gray-700 fs-8">3 stars: </span>
                                    <span style="color: #ffc107;">★★★</span><span style="color: #e4e6ef;">★★</span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            console.log('Initializing Star Rating System...');
            
            // Rating feedback messages
            const feedbackMessages = {
                0: "Please select a rating",
                1: "Poor - Did not meet expectations",
                2: "Fair - Met some expectations",
                3: "Good - Met expectations",
                4: "Very Good - Exceeded expectations",
                5: "Excellent - Far exceeded expectations"
            };

            // Initialize all star ratings
            document.querySelectorAll('.star-rating').forEach(function(ratingContainer) {
                const stars = ratingContainer.querySelectorAll('.star');
                const target = ratingContainer.getAttribute('data-target');
                const hiddenInput = document.querySelector(`input[name="${target}"]`) || 
                                  ratingContainer.parentElement.querySelector('.rating-value');
                const feedbackElement = ratingContainer.parentElement.querySelector('.feedback-text');
                
                let currentRating = parseInt(ratingContainer.getAttribute('data-rating')) || 0;
                
                console.log(`Initializing rating for ${target}, current: ${currentRating}`);
                
                // Set initial display
                updateStarDisplay(stars, currentRating);
                updateFeedback(feedbackElement, currentRating);
                
                // Add click handlers
                stars.forEach(function(star, index) {
                    const value = parseInt(star.getAttribute('data-value'));
                    
                    // Click event
                    star.addEventListener('click', function(e) {
                        e.preventDefault();
                        console.log(`Star ${value} clicked for ${target}`);
                        
                        currentRating = value;
                        ratingContainer.setAttribute('data-rating', value);
                        
                        if (hiddenInput) {
                            hiddenInput.value = value;
                        }
                        
                        updateStarDisplay(stars, value);
                        updateFeedback(feedbackElement, value);
                        
                        // Visual feedback
                        star.style.transform = 'scale(1.2)';
                        setTimeout(() => {
                            star.style.transform = '';
                        }, 150);
                    });
                    
                    // Hover effects
                    star.addEventListener('mouseenter', function() {
                        updateStarDisplay(stars, value, true);
                    });
                    
                    ratingContainer.addEventListener('mouseleave', function() {
                        updateStarDisplay(stars, currentRating);
                    });
                });
            });
            
            // Function to update star display
            function updateStarDisplay(stars, rating, isHover = false) {
                stars.forEach(function(star, index) {
                    const starValue = parseInt(star.getAttribute('data-value'));
                    
                    if (starValue <= rating) {
                        star.classList.add('filled');
                        star.style.color = '#ffc107';
                        if (isHover) {
                            star.style.transform = 'scale(1.1)';
                            star.style.textShadow = '0 0 10px rgba(255, 193, 7, 0.8)';
                        } else {
                            star.style.transform = '';
                            star.style.textShadow = '';
                        }
                    } else {
                        star.classList.remove('filled');
                        star.style.color = '#e4e6ef';
                        star.style.transform = '';
                        star.style.textShadow = '';
                    }
                });
            }
            
            // Function to update feedback text
            function updateFeedback(feedbackElement, rating) {
                if (feedbackElement) {
                    feedbackElement.textContent = feedbackMessages[rating] || feedbackMessages[0];
                    
                    // Update color based on rating
                    if (rating >= 4) {
                        feedbackElement.className = 'feedback-text text-success fs-7';
                    } else if (rating >= 3) {
                        feedbackElement.className = 'feedback-text text-warning fs-7';
                    } else if (rating >= 1) {
                        feedbackElement.className = 'feedback-text text-danger fs-7';
                    } else {
                        feedbackElement.className = 'feedback-text text-muted fs-7';
                    }
                }
            }
            
            // Form validation
            const form = document.querySelector('form');
            const submitBtn = document.getElementById('submitReviewBtn');
            
            if (form && submitBtn) {
                form.addEventListener('submit', function(e) {
                    const ratingInput = document.querySelector('input[name="Rating"]');
                    const rating = ratingInput ? parseInt(ratingInput.value) || 0 : 0;
                    
                    if (rating === 0) {
                        e.preventDefault();
                        alert('Please select an overall rating before submitting.');
                        
                        // Scroll to rating section
                        const ratingSection = document.querySelector('.star-rating');
                        if (ratingSection) {
                            ratingSection.scrollIntoView({ behavior: 'smooth', block: 'center' });
                            ratingSection.style.animation = 'shake 0.5s ease-in-out';
                            setTimeout(() => {
                                ratingSection.style.animation = '';
                            }, 500);
                        }
                        return false;
                    }
                    
                    // Show loading state
                    submitBtn.disabled = true;
                    submitBtn.querySelector('.indicator-label').style.display = 'none';
                    submitBtn.querySelector('.indicator-progress').style.display = 'inline-flex';
                });
            }
            
            console.log('Star Rating System initialized successfully!');
        });
    </script>
    
    <style>
        /* Simple Star Rating Styles */
        .star-rating {
            display: flex;
            gap: 5px;
            margin-bottom: 10px;
        }
        
        .star {
            font-size: 2rem;
            color: #e4e6ef;
            cursor: pointer;
            transition: all 0.3s ease;
            user-select: none;
            font-family: Arial, sans-serif;
        }
        
        .star:hover {
            transform: scale(1.1);
        }
        
        .star.filled {
            color: #ffc107 !important;
        }
        
        .star-rating-sm .star {
            font-size: 1.2rem;
        }
        
        .rating-container {
            margin-bottom: 1rem;
        }
        
        .feedback-text {
            font-weight: 500;
            min-height: 20px;
        }
        
        .bg-light {
            background-color: #f8f9fa !important;
            border: 1px dashed #dee2e6;
        }
        
        /* Shake animation for validation */
        @@keyframes shake {
            0%, 100% { transform: translateX(0); }
            10%, 30%, 50%, 70%, 90% { transform: translateX(-5px); }
            20%, 40%, 60%, 80% { transform: translateX(5px); }
        }
        
        /* Mobile responsiveness */
        @@media (max-width: 768px) {
            .star {
                font-size: 1.5rem;
            }
            
            .star-rating-sm .star {
                font-size: 1rem;
            }
            
            .star-rating {
                gap: 3px;
            }
        }
    </style>
}